# This is a basic workflow to help you get started with Actions

name: EncryptionTestResults

env:
      LICENSE_PLATE: ${{ secrets.MY_LICENSE_PLATE }} 
     # randomPWD: $(gpg --gen-random --armor 1 8 | sed 's/[^[:alnum:]]//g') 

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Zip Readme file
        run: |
          zip -r readme.zip README.md
      - name: Get the apt-get update
        run: |
          sudo apt-get update

      - name: install gpg
        run: |
          sudo apt-get -y install gpg

      - name: generate random pwd and save it as env variable
        run: |
          export ranPWD=$(echo $(gpg --gen-random --armor 1 8 | sed 's/[^[:alnum:]]//g')) 
          echo randomPWD=$(echo $ranPWD) >> $GITHUB_ENV


      - name: create combined pwd  and Encrypt README.md
        run: |
          fullPWD=${{ env.randomPWD }}-${{ secrets.MY_LICENSE_PLATE }} 

          echo Line 49 $fullPWD
          echo envFullPWD=${{ env.randomPWD }}-${{ secrets.MY_LICENSE_PLATE }}  >> $GITHUB_ENV

          echo Line 52 ${{ secrets.MY_LICENSE_PLATE }} 


      - name: Encrypt README.md
        run: | 
          echo Line 54 ${{ env.envFullPWD }}
          gpg -c --batch --passphrase ${{ env.envFullPWD }} -o encryptFolder.gpg readme.zip
    
      - name: Send email with encrypted results
        uses: dawidd6/action-send-mail@v3
        with:
          # Required mail server address:
          server_address: ${{secrets.MAIL_SERVER}}
          # Required mail server port:
          server_port: 465
          # Optional (recommended): mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.MAIL_PASSWORD}}
          # Required mail subject:
          subject: Encrypted test results for build job ${{github.repository}}
          # Required recipients' addresses:
          to:  ${{secrets.MAIL_ADDRESS}}
          # Required sender full name (address can be skipped):
          from: ${{secrets.MAIL_USERNAME}}
          # Optional plain body:

          body: Encrypted test results for build job ${{github.repository}} 
      
                The encryptFolder.gpg attachment contains the test results. To view them you need  to

                Decrypt the file with the following  command


                    **gpg -d --batch --passphrase PASSPHRASE encryptFolder.gpg > testResults.zip**


                Where PASSPHRASE is password you will receive  in a second email, hyphen, and  your License Plate

                As example, if the password in the following email is **HauCyjM8fxc** and your license plate is **ab1cde** the passphrase to decrypt the file will be


                    **HauCyjM8fxc-ab1cde**

          # Optional attachments:
          attachments: encryptFolder.gpg    




      - name: Send email with password
        uses: dawidd6/action-send-mail@v3
        with:
          # Required mail server address:
          server_address: ${{secrets.MAIL_SERVER}}
          # Required mail server port:
          server_port: 465
          # Optional (recommended): mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.MAIL_PASSWORD}}
          # Required mail subject:
          subject: Password
          # Required recipients' addresses:
          to:  ${{secrets.MAIL_ADDRESS}}
          # Required sender full name (address can be skipped):
          from: ${{secrets.MAIL_USERNAME}}
          # Optional plain body:

          body: Password to decrypt build job ${{github.repository}} test results 
      
                    **${{ env.randomPWD }}**
