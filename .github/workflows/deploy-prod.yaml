name: Deploy Prod

on:
  push:
    tags:
      - "v[0-9].[0-9]+.[0-9]+"

env:
  IMAGE_ID: ${{ vars.AWS_ECR_URI }}
  LICENSE_PLATE: ${{ vars.LICENSE_PLATE }}

  TF_VERSION: 1.2.2
  TG_VERSION: 0.37.1
  TG_SRC_PATH: terraform
  TFC_WORKSPACE: prod

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  manual_approval:
    name: Manual approval request
    runs-on: ubuntu-22.04

    steps:
      - name: set environment
        run: echo "APP_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: ${{ github.actor }}
          minimum-approvals: 1
          issue-title: "Approval for deployment on production environment. Tag: ${{ env.APP_TAG }}"

  terraform_plan:
    name: Terraform plan production
    environment: prod
    runs-on: ubuntu-22.04

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: set environment
        run: echo "APP_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ vars.TERRAFORM_DEPLOY_ROLE_ARN }}
          aws-region: ca-central-1

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}

      - name: Terragrunt Plan
        id: tg_plan
        working-directory: ${{ env.TG_SRC_PATH }}/${{ env.TFC_WORKSPACE }}
        env:
          TF_CLI_ARGS: -no-color
          app_image: ${{ env.IMAGE_ID }}:${{ env.APP_TAG }}
          LICENSE_PLATE: ${{ vars.LICENSE_PLATE }}
        run: terragrunt run-all plan --terragrunt-non-interactive

  tag:
    name: Tagging the Docker image
    environment: tools
    runs-on: ubuntu-22.04
    needs: manual_approval

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ vars.TERRAFORM_DEPLOY_ROLE_ARN }}
          aws-region: ca-central-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create Docker Tag
        run: |
          docker pull ${{ env.IMAGE_ID }}:${GITHUB_SHA}
          docker tag ${{ env.IMAGE_ID }}:${GITHUB_SHA} ${{ env.IMAGE_ID }}:${GITHUB_REF#refs/tags/}
          docker push ${{ env.IMAGE_ID }}:${GITHUB_REF#refs/tags/}

  terraform_apply:
    name: terraform apply production
    environment: prod
    runs-on: ubuntu-22.04
    needs: [terraform_plan, tag, manual_approval]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: set environment
        run: echo "APP_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ vars.TERRAFORM_DEPLOY_ROLE_ARN }}
          aws-region: ca-central-1

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}

      - name: Terragrunt Apply
        working-directory: ${{ env.TG_SRC_PATH }}/${{ env.TFC_WORKSPACE }}
        env:
          app_image: ${{ env.IMAGE_ID }}:${{ env.APP_TAG }}
          LICENSE_PLATE: ${{ vars.LICENSE_PLATE }}
        run: terragrunt run-all apply --terragrunt-non-interactive
