name: Deploy Dev

on:
  push:
    branches: [main]
    paths:
      - ".github/workflows/push.yaml"
      - ".github/workflows/deploy-*.yaml" # I'm not sure this line is usefull? I don't see the usecase
      - ".github/workflows/deploy-tools.yaml" # But I think this one is important if the way of deploying the Docker change
      - "client/**"
      - "server/**"
      - "terraform/**"
      - "Dockerfile"
      - "!**/README.md"

env:
  IMAGE_ID: ${{ vars.AWS_ECR_URI }}

  TF_VERSION: 1.2.2
  TG_VERSION: 0.37.1
  TG_SRC_PATH: terraform
  TFC_WORKSPACE: dev

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  docker_push:
    name: docker push
    environment: tools
    runs-on: ubuntu-22.04

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.TERRAFORM_DEPLOY_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Test
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: .
          file: ./Dockerfile
          target: test

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: .
          file: ./Dockerfile
          target: runtime
          push: true
          tags: ${{ env.IMAGE_ID }}:${{ github.sha }}

  terraform_apply:
    name: terraform apply Dev
    environment: dev
    runs-on: ubuntu-22.04
    needs: docker_push

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.TERRAFORM_DEPLOY_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - uses: autero1/action-terragrunt@v1.3.1
        with:
          terragrunt_version: ${{ env.TG_VERSION }}

      - name: Terragrunt Apply
        working-directory: ${{ env.TG_SRC_PATH }}/${{ env.TFC_WORKSPACE }}
        env:
          app_image: ${{ env.IMAGE_ID }}:${{ github.sha }}
          LICENSE_PLATE: ${{ vars.LICENSE_PLATE }}
        run: terragrunt run-all apply --terragrunt-non-interactive
