name: PushManual

on:
  workflow_dispatch:


env:
  IMAGE_ID: ${{ secrets.AWS_ECR_URI }}

  TF_VERSION: 1.2.2
  TG_VERSION: 0.37.1
  TG_SRC_PATH: terraform
  TFC_WORKSPACE: dev

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  docker_push:
    name: docker push
    environment: tools
    runs-on: ubuntu-22.04

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.TERRAFORM_DEPLOY_ROLE_ARN }}
          aws-region: ca-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
            
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Test
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: .
          file: ./Dockerfile
          target: test

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          context: .
          file: ./Dockerfile
          target: runtime
          push: true
          tags: ${{ env.IMAGE_ID }}:${{ github.sha }}

      - name: Scan Docker image
        id: docker-scan
        uses: alexjurkiewicz/ecr-scan-image@v1.7.0
        with:
          repository: ssp
          tag: ${{github.sha}}
          #tag: '2c2cf8314c050d1a6b7386b9560a80760c068374'
          fail_threshold: medium
          # ignore_list: |
          #   CVE-2014-7654321
          #   CVE-2014-456132
      # Access scan results in later steps
      - run: echo "${{ steps.docker-scan.outputs.total }} total vulnerabilities."





  terraform_apply:
    name: terraform apply Dev
    environment: dev
    runs-on: ubuntu-22.04
    needs: docker_push

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.TERRAFORM_DEPLOY_ROLE_ARN }}
          aws-region: ca-central-1

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}

      - name: Terragrunt Apply
        working-directory: ${{ env.TG_SRC_PATH }}/${{ env.TFC_WORKSPACE }}
        env:
          app_image: ${{ env.IMAGE_ID }}:${{ github.sha }}
          LICENSE_PLATE: ${{ secrets.MY_LICENSE_PLATE }}
        run: terragrunt run-all apply --terragrunt-non-interactive