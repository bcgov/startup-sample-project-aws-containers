name: Deploy Test

on:
  push:
    tags:
      - "v[0-9].[0-9]+.[0-9]+-rc*"

env:
  IMAGE_ID: ${{ secrets.AWS_ECR_URI }}

  TF_VERSION: 1.2.2
  TG_VERSION: 0.37.1
  TG_SRC_PATH: terraform
  TFC_WORKSPACE: test

jobs:
  tag:
    name: Tagging the Docker image
    runs-on: ubuntu-22.04

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
          role-session-name: startup-sample-project-github-action
          role-skip-session-tagging: true
          
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create Docker Tag
        run: |
          docker pull ${{ env.IMAGE_ID }}:${GITHUB_SHA}
          docker tag ${{ env.IMAGE_ID }}:${GITHUB_SHA} ${{ env.IMAGE_ID }}:${GITHUB_REF#refs/tags/}
          docker push ${{ env.IMAGE_ID }}:${GITHUB_REF#refs/tags/}

  terraform_apply:
    name: terraform apply test
    environment: test
    runs-on: ubuntu-22.04
    needs: tag

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TFC_TEAM_TOKEN }}

      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}

      - name: Terragrunt Apply
        working-directory: ${{ env.TG_SRC_PATH }}/${{ env.TFC_WORKSPACE }}
        env:
          app_image: ${{ env.IMAGE_ID }}:${{ github.event.workflow_run.head_branch}}
          LICENSE_PLATE: ${{ secrets.MY_LICENSE_PLATE }}          
        run: terragrunt run-all apply --terragrunt-non-interactive